메뉴 설명.
System-------
-Domain(도메인): 도메 관리 화면.
-User(사용자): 사용자를 등록하고 권한을 설정 할 수 있다.최우선순위
-Role(역할): 그룹과 같은 작용. 사용자의 자세한 권한을 줄 수 있다. 사용자화면에서 설정이 최우선이다.
-Approval Authorization(권한승인): 계정 신청, 계정 활성화, 비밀번호 변경 등등 수락 거절 하는 화면.
-Setting(설정): 시스템에서 사용되는 설정, 변경시 실제 시스템 운영이 변경.
-Menu(메뉴): 좌측 메뉴구성에 쓰이고 엔티티를 동기화하고 실제 화면조작, 클라이언트 연동 등 역할을 한다.
            기능이 다양하고 복잡하므로 아래 별도로 설명 함.
-Common Code(공동코드): 시스템에서 사용되는 공동코드로 주로 콤보박스에 사용된다.
-Terminology(용어정의): 글로벌 메세지.
-Message(메세지): 개발 시 사용되는 메세지.시스템에서 에러 메세지 던질때, 서버에서 사용됨
-Ext. Attibute(확장속성):화면에서 정의한 내용이 <things-extension>태그 안에 표현된다.
-Storage(저장소): 이미지, 파일, 비디오등이 저장되는 폴더를 룰 등을 적용하여 관리.
-Attachment(첨부파일): 저장소에 이미지, 파일, 비디오 등을 업로드 혹은 삭제.
-Video(비디오): 저장소에 저장된 비디오를 재생 할 수 있다.
-Image(이미지): 저장소에 저장된 이미지를 미리보기.
-Notice(알림):안쓰는 화면
-Test Case, Test Item: 테스트 관리용.
-Issue: 시스템에 대한 Issue를 정의 해놓는다.

메뉴화면:
탬플릿 이름은 클라이언트 소스 html파일 이름.
Detail Form은 클라언트와 연동하면 파일 이름이고 설정으로 Detail Form구성하면 things-resource-detail 이런식

프레임웍:
라우팅타입이 다이나믹이면 모두 설정으로 된 화면.
메타데타를 보관한다. 한번 오픈한 화면 다시 들어가면 db로직타지 않고 바로 보여줌.
서치랭크가  0이면 화면에 안나온다.
