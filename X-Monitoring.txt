X-MES Publisher--------------------------------
restful url: {{factory_url}}/rest/publishers/initData?subject={{SCENE_ID}}
   http://xmonitor.qhweixun.com/rest/publishers/SCENE-559/init_data
******restful사용법은 562화면 참고, 한화면에서 selectbox하나로 여러개 컴포넌트 값을 변경할때 참고(form 액션을 restful처럼 사용)
******한 scene에 여러개 데이터 소스가 있으면 액션 하나로 한번에 다 가져온다.
******클릭 시 팝업 보여주는기능은 ramaxel eq화면 참고, eqId를 화면에서 코딩으로 넘긴후 팝업화면에서 받아서 화면 로딩시 서버에 요청 보내는 형식이다.
******비쥬얼라이저의 예제는 Len에 있음.
Path: /elidom/stomp/topic/hatiolab-hq/smart/{{SCENE-NAME}}
scene 가져오기: http://hatiolab.pointhing.xyz/rest/scenes/168
비디오의 url: ws://192.168.0.3 (WS Video URL)
mes화면의 라벨-->scene화면은 보여주기만 하는 화면이다. 이미지들은 시스템 설정에 file.context.path 설정한 경로에서 불러온다.


属性---------------------------->
text--글씨
fillStyle--배경채우기 색상
strokeStyle--윤곽선 색상
fontColor--글씨 색상
rotation--회전
hidden--숨김
location--위치 좌표 {x:100,y:100}->데이터를 서버로 부터 받아서 구현함, 직접 디자인 화면에서 설정하면 에러남
dimention--크기(데이터 형식과 사용방법은 location과 동일)
data--Array 혹은 Object
value--단일 값
started--:데이터 값을 받아 애니메이션 시작시킬때 사용
reference--global-ref 컴포넌트에서 reference 속성 바꿀때 사용.

规则类型---------------------------->
Value-값
map-여러개 키-value형식의 값을 지정하여 컴포넌트 값과 비교하여 value를 보여줌.
range-범위를 지정하여 값이 지정된 범위에서 설정된 값을 보여준다.
eval-function

창고 컴포넌트:
1.rack-창고용 랙을 표현할 때 사용하는 컴포넌트. 높이와 층을 적용할 수 있으며 랙과 층마다 고유 ID를 부여할 수 있다.
2.container-안에 다른 컴포넌트를 포함시킬 수 있다.
3.indoor map-tab과 같이 사용되며 indoor의 id를 지정하고 tab reference를 indoor의 id와 같게 하면 둘이 한 세트가 된다.
4.person, forklift-3D용 사람과 지게차.
5.beacon과humidity sensor는 현재로선 기능없음.

데이터소스:
    stomp:node-red혹은 Publisher와 연동해서 사용, Publisher 쓸때 굳이 쓸 필요 없음.
            URL: 서버주소(http://xmonitor.qhweixun.com/elidom/stomp)
            Subject: node-red의  Destination(/elidom/stomp/topic/hatiolab-hq/smart/SCENE-282)
    mqtt: node-red와 연동해서 사용
    firebase: 구글에서 제공하는 클라우드 데이터베이스 같은 기능임.
    restful: 일반적인 http와 같음, 화면에서 URL을 지정하고 해당 URL로부터 데이터를 받아온다. node-red일수도 있고 Publisher일수도 있음.

애니메이션:
    OutLine: target으로 지정된 컴포넌트의 궤도를 타고 움직인다.
    Waiting Time: 설정한 시간 만큼 지연 후 애니메이션이 작동한다. 1000=1초
    Retention: 설정한 시간만큼 작동 후 컴포넌트가 사라짐.
    Duration: 지정한 퀘도를 한번 통과하는데 걸리는 시간
    Repeat: 무한반복
    Theta: 각도
    Heartbeat-->scale: 설정한 배수크기 만큼 커짐

    info window: 마우스 호버 또는 마우스 클릭 이벤트 시 info window컴포넌트 ID를 입력하면 해당 info window가 나타난다.
    clone: 어떤 상대를 일정한주기 간격으로 계속 복사할때 사용. duration은 반복 주기, 설정한 시간마다 한번씩 복사한다.
            targetRetention은 타겟이 얼마정도 있다가 사라질건지, 보통 복사대상의 retention시간하고 같게 설정해준다.
            clone사용 시 복사 대상컴포넌트의 ID외에 template prefix도 지정해 주어야 한다.

mqtt: ID하고 Topic 같이야 함

target-->(key)로 설정하면 ID값이 key와 같은 컴포넌트들을 찾아가서 값을 매핑해준다.


Mqtt:
    Broker-->mq.hatiolab.com  RabbitMQ서버
            http://mq.hatiolab.com:15672/#/
            id: mps
            pw: mps
    Port-->15675
    Path-->/ws
    User-->hatiolab
    Password-->hatiolab
    Topic-->movement    publisher의 key 개념. Stomp의 Subject와 같음.
    Qos-->0
    Client ID-->ABC    유니크 한 이름을 갖는다는 뜻.
    Data Format-->JSON
    Retain-->

Stomp:
    URL-->http://mq.hatiolab.com:15674/stomp
    Subject-->movement
    Login-->hatiolab
    passcode-->hatiolab
    Data Format-->JSON
    Label Debug-->체크하면 F12하면 로그가 찍힌다.

인티그레이터: 화면을 그린후 다른서버에서 가져다 연동하여 사용한다.
폼 컨포넌트는 항상 위에 보인다.  일반 컴포넌트하고 효과 등이 다를수 있다.
값을 줄때 속성->value선택시 value는 대표속성 값으로 매핑된다.


eval-->this, parent, value,등 주로 사용, javascript 언어임
ctrl+enter  script입력시 전체화면
ctrl+shift+e-->json파일 export
ctrl+del-->초기데이터 삭제
